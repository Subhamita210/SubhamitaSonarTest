name: Download repo file

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    #### For downloading latest version of mssql dll file under src folder ###
      - name: Clear cache
        uses: actions/github-script@v6
        with:
          script: |
            console.log("About to clear")
            const caches = await github.rest.actions.getActionsCacheList({
              owner: context.repo.owner,
              repo: context.repo.repo,
            })
            for (const cache of caches.data.actions_caches) {
              console.log(cache)
              github.rest.actions.deleteActionsCacheById({
                owner: context.repo.owner,
                repo: context.repo.repo,
                cache_id: cache.id,
              })
            }
            console.log("Clear completed")  
            
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
        
      - name: Git checkout
        uses: actions/checkout@v1
      - name: Branch name
        run: echo running on branch ${GITHUB_REF##*/}
      
      - id: latest-release
        uses: pozetroninc/github-action-get-latest-release@master
        with:
          repository: microsoft/mssql-jdbc
          
      - name: Release name
        run: echo release ${{ steps.latest-release.outputs.release }}  
        
      - name: character-replacement-test
        run: |
         VERSION="${${{ steps.latest-release.outputs.release }}//v/}"
         echo $VERSION
        
        # if mssql .dll file exits then dont download, commit and push
      - name: Check file existence
        id: check_files
        uses: andstor/file-existence-action@v1
        with:
          files: "src/mssql-jdbc_auth-11.2.1.x64.dll"

      - name: File exists
        if: steps.check_files.outputs.files_exists == 'true'
        # Only runs if all of the files exists
        run: echo All files exists!
        
        # working url try : wget https://github.com/microsoft/mssql-jdbc/releases/download/v11.2.1/mssql-jdbc_auth.zip
      - name: Download mssql dll
        if: steps.check_files.outputs.files_exists == 'false'
        run: |
           wget https://github.com/microsoft/mssql-jdbc/releases/download/${{ steps.latest-release.outputs.release }}/mssql-jdbc_auth.zip
           7z x mssql-jdbc_auth.zip
           ls mssql-jdbc_auth
           cp -f mssql-jdbc_auth/x64/mssql-jdbc_auth-11.2.1.x64.dll src/mssql-jdbc_auth-11.2.1.x64.dll
           pwd    
           ls src/
           pwd
           
      - name: setup git config
        if: steps.check_files.outputs.files_exists == 'false'
        run: |
          # setup the username and email. I tend to use 'GitHub Actions Bot' with no email by default
          git config user.name "subhamita210"
          git config user.email "<subhamita@technoexponent.com>"
          ls src/
      
      - name: commit
        if: steps.check_files.outputs.files_exists == 'false'
        run: |
          # Stage the file, commit and push
          git add src
          git commit -m "new date commit"
          git branch
          git push origin HEAD:${GITHUB_REF##*/}
          ls src/
##############################################################################################################################
